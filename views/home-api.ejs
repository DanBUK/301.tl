<% if (error) { %><div class="error"><%= error %></div><% } %>

<h2>Public API</h2>

<h3>Basic usage</h3>
<p><code>http://api.<%= host %>/?longUrl=&lt;url to encode&gt;[&custom=&lt;my key&gt;][&private=0|1]</code>
<p>Note that a custom key will always be private.

<h3>Protocols and formats</h3>
<ul>
 <li>Using <strong>POST</strong> and expecting <strong>HTML</strong><br>
  Request:  <code>curl 'http://api.<%= host %>' -d 'longUrl=http://www.google.com'</code><br>
  Response: <code>&lt;a href="http://<%= host %>/g" title="http://www.google.com"&gt;301.tl/&lt;strong&gt;g&lt;/strong&gt;&lt;/a&gt;</code>
 <li>Using <strong>POST</strong> and expecting <strong>JSON</strong><br>
  Request:  <code>curl 'http://api.<%= host %>' -d '{"longUrl":"http://www.google.com"}' -H 'Content-Type: application/json'</code><br>
  Response: <code>{"shortUrl":"http://<%= host %>/g","longUrl":"http://www.google.com"}</code>
 <li>Using <strong>GET</strong> and expecting <strong>HTML</strong><br>
  Request:  <code>curl 'http://api.<%= host %>?longUrl=http://www.google.com'</code><br>
  Response: <code>&lt;a href="http://<%= host %>/g" title="http://www.google.com"&gt;301.tl/&lt;strong&gt;g&lt;/strong&gt;&lt;/a&gt;</code>
 <li>Using <strong>GET</strong> and expecting <strong>JSON</strong><br>
  Request:  <code>curl 'http://api.<%= host %>?longUrl=http://www.google.com' -H 'Content-Type: application/json'</code><br>
  Response: <code>{"shortUrl":"http://<%= host %>/g","longUrl":"http://www.google.com"}</code>
 <li>Using <strong>GET</strong> and expecting <strong>TEXT</strong><br>
  Request:  <code>curl 'http://api.<%= host %>?longUrl=http://www.google.com' -H 'Content-Type: text/plain'</code><br>
  Response: <code>shortUrl=http://<%= host %>/g\nlongUrl=http://www.google.com</code>
</ul>
<p>I still have an issue recognizing POST requests with text/plain content type. Working on it...
<p>Note that you can know if the service has generated a new short URL or re-used an existing one by checking response status: "200" means it's a reuse, while "201" means it's a new one.

<h3>Statistics</h3>
<p>Statistics can be checked by anyone, using GET, appending "+" to the short URL, and specifying the content type. Output is very similar to what you get with encoding API, except you get an additional "hits" information.
<ul>
 <li>Expecting <strong>HTML</strong><br>
   Request:  <code>curl 'http://301.tl/1+' -H 'Content-Type: text/html'</code><br>
   Response: <code>&lt;a href="http://301.tl/1" title="http://google.fr"&gt;301.tl/&lt;strong&gt;1&lt;/strong&gt;&lt;/a&gt; has been hit 2 times.</code>
 <li>Expecting <strong>TEXT</strong><br>
   Request:  <code>curl 'http://301.tl/1+' -H 'Content-Type: text/plain'</code><br>
   Response: <code>shortUrl=http://301.tl/1\nlongUrl=http://google.fr\nhits=2</code>
 <li>Expecting <strong>JSON</strong><br>
   Request:  <code>curl 'http://301.tl/1+' -H 'Content-Type: application/json'</code><br>
   Response: <code>{"shortUrl":"http://301.tl/1","longUrl":"http://google.fr","hits":"2"}</code>
</ul>

<h3>Private or public ?</h3>
<p>When we shorten your URL, we first check if this URL has already been shortened as "public". If we find a public short URL, then this one will be returned.
<p>Whenever you'd like to have your own statistics, or want to use a custom short key, you may want this short URL not to be retrieved by the next guy who shortens this URL, so that your statistics are not messed up with someone else's tweets.
<p>Of course, anyone can use the private URLs, it only means that it won't be generated by shortening the same long URL.
